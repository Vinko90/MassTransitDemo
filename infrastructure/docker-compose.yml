version: "3.8"

networks:
  everything:

services:
    #Configure RabbitMQ Container
    rabbitmq:
      image: rabbitmq:3-management-alpine
      container_name: "rabbitmqdemo"
      hostname: "rabbitmqdemo"
      ports:
        - "5672:5672"
        - "15672:15672"
        - "15692:15692"
      networks:
        - "everything"
    #Configure MTOrderService Container
    orderservice:
      container_name: "MTOrderService"
      image: mtorderservice:latest
      build:
        context: ../src
        dockerfile: ../src/MTOrderService/Dockerfile
      ports:
        - "7100:80"
      networks:
        - "everything"
      depends_on:
        - rabbitmq
      environment:
        ASPNETCORE_ENVIRONMENT: "Development"
        RABBITMQ_URI: "rabbitmq://guest:guest@rabbitmqdemo:5672"
    #Configure MTShippingService Container
    shippingservice:
      container_name: "MTShippingService"
      image: mtshippingservice:latest
      build:
        context: ../src
        dockerfile: ../src/MTShippingService/Dockerfile
      networks:
        - "everything"
      depends_on:
        - rabbitmq
      environment:
        RABBITMQ_URI: "rabbitmq://guest:guest@rabbitmqdemo:5672"
    #Configure Seq Container
    seq:
      image: datalust/seq:latest
      container_name: "seqdemo"
      hostname: "seqdemo"
      ports:
        - "80:80"
        - "5341:5341"
      deploy:
        resources:
          limits:
            memory: 16G
          reservations:
            memory: 16G
      environment:
        - ACCEPT_EULA=Y
      networks:
        - "everything"
    #Configure Prometheus Container
    prometheus:
      image: prom/prometheus
      container_name: "prometheusdemo"
      hostname: "prometheusdemo"
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"
      networks:
        - "everything"
    #Configure Grafana Container
    grafana:
      image: grafana/grafana-oss
      container_name: "grafanademo"
      hostname: "grafanademo"
      depends_on:
        - prometheus
      volumes:
        - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/prometheus.yaml
        - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/
      ports:
        - "3000:3000"
      networks:
        - "everything"
    #Configure Jaeger Container
    jaeger:
      image: jaegertracing/all-in-one:1.30
      container_name: "jaegerdemo"
      hostname: "jaegerdemo"
      ports:
        - "5775:5775/udp"
        - "6831:6831/udp"
        - "6832:6832/udp"
        - "5778:5778"
        - "16686:16686"
        - "14250:14250"
        - "14268:14268"
        - "14269:14269"
        - "9411:9411"
      environment:
        - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      networks:
        - "everything"
